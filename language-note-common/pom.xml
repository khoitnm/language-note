<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>language-note-common</artifactId>
	<groupId>tnmk</groupId>

    <!-- When changing from 'jar' to 'war', you must have the ServletInitializer java file. Otherwise, I cannot load '/resources/static/' files. -->
	<packaging>jar</packaging>
	<name>Language Note Common</name>
	<version>1.0-SNAPSHOT</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.10.RELEASE</version>
	</parent>

    <properties>
        <path.resources>src/main/resources</path.resources>
        <main.basedir>${basedir}/../..</main.basedir>
        <java.version>1.8</java.version>
    </properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- hot swapping, disable cache for template, enable live reload: Don't use it anymore because it cause troubles when working with IDE -->
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency> -->

        <!--AOP-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>


        <!-- For some utilities -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>


        <!-- COMPRESSION -->
        <!-- Support *.RAR -->
        <dependency>
            <groupId>com.github.junrar</groupId>
            <artifactId>junrar</artifactId>
            <version>0.7</version>
        </dependency>

        <!-- //A facade of common-compress libraries (support *.zip, *.7z, *.tar...). -->
        <dependency>
            <groupId>org.rauschig</groupId>
            <artifactId>jarchivelib</artifactId>
            <version>0.7.1</version>
        </dependency>
        <!-- //This dependencies is necessary for 7z compression/extraction (which use XZ compression algorithm) -->
        <dependency>
            <groupId>org.tukaani</groupId>
            <artifactId>xz</artifactId>
            <version>1.5</version>
        </dependency>


        <!-- JSON: convert DateTime types in Java 8 -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <!--TEST-->
        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <!--<version>4.12</version>-->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>
        <!-- SONAR PLUGIN: BEGIN http://www.mojohaus.org/sonar-maven-plugin/plugin-info.html -->
        <!-- Commandline: mvn sonar:sonar -Dsonar.issuesreport.html.enable=true -->
        <!-- To run that commandline, you must open Sonar server -->
        <!-- To define the plugin version in your parent POM -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>2.7.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- To use the plugin goals in your POM or parent POM -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>2.7.1</version>
            </plugin>
            <!-- SONAR PLUGIN: END -->

            <!-- JACOBO REPORT: When you don't have Sonar server on your local machine, the Jacobo report will be better than Sonar Plugin -->
            <!-- http://www.baeldung.com/jacoco -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>


    </build>
</project>
